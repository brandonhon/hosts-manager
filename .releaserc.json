{
  "branches": ["main"],
  "tagFormat": "v${version}",
  "plugins": [
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "releaseRules": [
          { "type": "feat", "release": "patch" },
          { "type": "fix", "release": "patch" },
          { "type": "perf", "release": "patch" },
          { "type": "refactor", "release": "patch" },
          { "type": "docs", "release": "patch" },
          { "type": "build", "release": "patch" },
          { "type": "ci", "release": "patch" },
          { "type": "test", "release": false },
          { "type": "chore", "release": false },
          { "scope": "no-release", "release": false },
          { "breaking": true, "release": "minor" }
        ]
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "presetConfig": {
          "types": [
            { "type": "feat", "section": "üöÄ Features" },
            { "type": "fix", "section": "üêõ Bug Fixes" },
            { "type": "perf", "section": "‚ö° Performance Improvements" },
            { "type": "refactor", "section": "‚ôªÔ∏è Code Refactoring" },
            { "type": "revert", "section": "‚è™ Reverts" },
            { "type": "docs", "section": "üìö Documentation", "hidden": false },
            { "type": "style", "section": "üíÑ Styles", "hidden": true },
            { "type": "chore", "section": "üßπ Miscellaneous Chores", "hidden": true },
            { "type": "test", "section": "‚úÖ Tests", "hidden": true },
            { "type": "build", "section": "üõ† Build System", "hidden": true },
            { "type": "ci", "section": "‚öôÔ∏è Continuous Integration", "hidden": true }
          ]
        }
      }
    ],
    [
      "@semantic-release/changelog",
      {
        "changelogFile": "CHANGELOG.md",
        "changelogTitle": "# Changelog\n\nAll notable changes to this project will be documented in this file. See [Conventional Commits](https://conventionalcommits.org) for commit guidelines."
      }
    ],
    [
      "@semantic-release/github",
      {
        "addReleases": "bottom",
        "releaseBodyTemplate": "## Release ${nextRelease.version}\n\nCross-platform binaries and source code for hosts-manager.\n\n### üì¶ Available Downloads\n\n**Compiled Binaries (both .tar.gz and .zip formats):**\n- `hosts-manager-${nextRelease.version}-linux-amd64.{tar.gz,zip}` - Linux x64\n- `hosts-manager-${nextRelease.version}-linux-arm64.{tar.gz,zip}` - Linux ARM64\n- `hosts-manager-${nextRelease.version}-darwin-amd64.{tar.gz,zip}` - macOS Intel\n- `hosts-manager-${nextRelease.version}-darwin-arm64.{tar.gz,zip}` - macOS Apple Silicon\n- `hosts-manager-${nextRelease.version}-windows-amd64.{tar.gz,zip}` - Windows x64\n\n**Source Code:**\n- `hosts-manager-${nextRelease.version}-source.tar.gz` - Complete source code archive\n- `hosts-manager-${nextRelease.version}-source.zip` - Complete source code archive\n\n### üöÄ Quick Installation\n\n**Linux/macOS:**\n```bash\n# Download and extract (replace with your platform)\ncurl -L -o hosts-manager.tar.gz https://github.com/${process.env.GITHUB_REPOSITORY}/releases/download/${nextRelease.version}/hosts-manager-${nextRelease.version}-linux-amd64.tar.gz\ntar -xzf hosts-manager.tar.gz\nsudo mv hosts-manager /usr/local/bin/hosts-manager\nchmod +x /usr/local/bin/hosts-manager\n```\n\n**Windows:**\nDownload the appropriate `.zip` file for your architecture and add the extracted `hosts-manager.exe` to your PATH.\n\n### üîê Checksums\nAll files are verified with SHA-256 checksums in `checksums.txt`.\n\n---\n\n${releaseNotes}"
      }
    ],
    [
      "@semantic-release/git",
      {
        "assets": ["CHANGELOG.md", "package.json"],
        "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
      }
    ]
  ]
}